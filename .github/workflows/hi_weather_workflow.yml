name: HiWeather Workflow

on:
  push:
    branches: [ main, develop ]

  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]

  workflow_dispatch:

jobs:
  check-style:
    name: Check Style
    runs-on: macos-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Create Properties File
        env:
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          touch local.properties
          echo "open.weather.key=OPEN_WEATHER_API_KEY" >> local.properties
          echo "places.api.key=PLACES_API_KEY" >> local.properties
          echo "maps_api_key=MAPS_API_KEY" >> local.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Generate cache key
        run: ./checksum.sh checksum.tx

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Run Static Code Analysis
        run: ./gradlew lintRelease ktlintCheck detekt spotlessCheck --scan

      - name: (Fail-only) Comment Build Scan Url
        uses: actions/github-script@v5.1.0
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })

      - name: (Fail-only) Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: (Fail-only) Upload the build report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: error-report
          path: build-reports.zip

  test:
    name: Unit Test
    needs: check-style
    runs-on: macos-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Create Properties File
        env:
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          touch local.properties
          echo "open.weather.key=OPEN_WEATHER_API_KEY" >> local.properties
          echo "places.api.key=PLACES_API_KEY" >> local.properties
          echo "maps_api_key=MAPS_API_KEY" >> local.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Generate cache key
        run: ./checksum.sh checksum.tx

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Run Android Test with Android Emulator Runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck connectedDebugAndroidTest

      - name: Generate Test Report
        run: ./gradlew koverReport

#      - name: Upload Test Report
#        run: |
#          curl -Os https://uploader.codecov.io/latest/linux/codecov
#          chmod +x codecov
#          ./codecov -f "build/reports/kover/project-xml/report.xml"

  build:
    name: Build
    needs: test
    runs-on: macos-latest
    if: github.event.pull_request.draft == false

    steps:
      - uses: actions/checkout@v2

      - name: Create Properties File
        env:
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        run: |
          touch local.properties
          echo "open.weather.key=OPEN_WEATHER_API_KEY" >> local.properties
          echo "places.api.key=PLACES_API_KEY" >> local.properties
          echo "maps_api_key=MAPS_API_KEY" >> local.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Generate cache key
        run: ./checksum.sh checksum.tx

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('checksum.txt') }}

      - name: Build
        run: ./gradlew assembleRelease

      - name: Upload Sample Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ github.base_ref }} == 'main' || 'develop'
        with:
          name: hiweather.apk
          path: app/build/outputs/apk/

      - name: Comment Build Scan Url
        uses: actions/github-script@v5.1.0
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
